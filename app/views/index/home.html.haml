%h1
  stack<b>pro</b>

%h2
  When the most questions go unanswered on 
  %a{href: "http://stackoverflow.com"}<
    stackoverflow

%ul
  %li
    Questions Asked:
  %li
    .box#total
  %li
    Questions Unanswered:
  %li
    .box#subset
%ul
  %li
    Select an 
    %b
      interval:
  %li.interval.first#1
    Every 1 hour for the past 24
  %li.spacer
    |
  %li.interval#2
    Every 2 hours for the past 48
  %li.spacer
    |
  %li.interval#3
    Every 3 hours for the past 48
  %li.spacer
    |
  %li.interval#4
    Every 4 hours for the past 48

/ default size is required, will get resized by js
%canvas{:id => "theChart", :width => 1200, :height => 600}

%table#theTable
  %thead
    %tr
      %td
        Hours Ago
      %td
        Timestamp
      %td
        Average Percent Unanswered
      %td
        Questions Asked
      %td
        Questions Answered
  %tbody
    


.footer
  A work in progress by David
  %a{href:"http://www.davidbrownman.com"}
    Brownman

%br
Note: All times are US: Eastern

:javascript
  function buildChart(dates, asked, unanswered){
    // console.log("in buildChart");
    // chart should scale to fit the whole graph
    var m = Math.max.apply(Math, asked)+50;
    var n = Math.min.apply(Math, unanswered)-50;

    var data = {
      labels : dates,
      datasets : [
        {
          fillColor : "#1145ff",
          strokeColor : "#000000",
          pointColor : "#fff",
          pointStrokeColor : "#000000",
          data : asked
        },
        {
          fillColor : "rgba(151,187,205,0.5)",
          strokeColor : "rgba(151,187,205,0.8)",
          pointColor : "#fff",
          pointStrokeColor : "#000000",
          data : unanswered
        }
      ]
    }

    var options = {
      scaleOverride : true, 
      scaleSteps : 10, 
      scaleStepWidth : m/10, 
      scaleStartValue : n
    };

    new Chart(ctx).Line(data,options);

  };

  function buildTable(interval, dates, asked, unanswered, percentage){
    // console.log("in buildTable");
    if (interval === 1) {var hours = 23}
    else {var hours = 47};

    var table = $("#theTable tbody");
    table.empty();
    for (var i=0; i<dates.length;i++) {
      var r = ["<tr>",
        "<td>",hours - i*interval,"</td>",
        "<td>",dates[i],"</td>",
        "<td>",percentage[i].toFixed(2)+'%',"</td>",
        "<td>",asked[i],"</td>",
        "<td>",unanswered[i],"</td>",
        "</tr>"].join(' ');

      table.append(r);
    };
    $("#theTable").tablesorter();

  };

  // sets passes interval data and builds accordingly
  function build(interval){
    if (interval === 1) {
      var slicedDates = dates.slice(dates.length - 24, dates.length);
      var slicedAsked = asked.slice(dates.length - 24, dates.length);
      var slicedUnanswered = unanswered.slice(dates.length - 24, dates.length);
      var slicedPercentage = percentage.slice(dates.length - 24, dates.length);
    }

    else {
      var tempTotal = 0;
      var slicedDates = [];
      var slicedAsked = [];
      var slicedUnanswered = [];
      var slicedPercentage = [];

      for (var i=interval-1; i<dates.length; i+=interval) {
        
        slicedDates.push(dates[i]);

        tempTotal = 0;
        for (var j=0; j<interval; j++) {
          tempTotal += asked[i-j];
        }
        slicedAsked.push(tempTotal);

        tempTotal = 0;
        for (var j=0; j<interval; j++) {
          tempTotal += unanswered[i-j];
        }
        slicedUnanswered.push(tempTotal);

        tempTotal = 0;
        for (var j=0; j<interval; j++) {
          tempTotal += percentage[i-j];
        }
        slicedPercentage.push(tempTotal/interval);

      };
    }

    buildChart(slicedDates, slicedAsked, slicedUnanswered);
    buildTable(interval, slicedDates, slicedAsked, slicedUnanswered, slicedPercentage);

  };

  // set data from rails
  var dates = #{@dates};

  var asked = #{@asked};

  var unanswered = #{@unanswered};

  var percentage = #{@percentage};

  var ctx = document.getElementById("theChart").getContext("2d");
  // chart should nicely occupy the space above the fold
  ctx.canvas.width  = window.innerWidth-20;
  ctx.canvas.height  = window.innerHeight-250;

  // default interval 
  var interval = 1;

  build(interval);

  // click handlers for intervals

  $("#1").click(function(){
    build(1);
  });

  $("#2").click(function(){
    build(2);
  });

  $("#3").click(function(){
    build(3);
  });

  $("#4").click(function(){
    build(4);
  });

